{
  "info": {
    "name": "PDF Processor API",
    "description": "Test collection for PDF processing lambda with Google AI Studio REST API integration (gRPC-free)",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "https://your-api-gateway-id.execute-api.region.amazonaws.com/prod",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "processing_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "PDF Processor",
      "item": [
        {
          "name": "Process PDF",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                                  "pm.test(\"Response contains processing_id\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.have.property('processing_id');",
                "    pm.collectionVariables.set('processing_id', jsonData.processing_id);",
                "});",
                "",
                "pm.test(\"Processing status is completed\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.status).to.eql('completed');",
                "});",
                "",
                "pm.test(\"Response contains summary\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.have.property('summary');",
                "    pm.expect(jsonData.summary).to.be.a('string');",
                "    pm.expect(jsonData.summary.length).to.be.greaterThan(0);",
                "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"action\": \"process_pdf\",\n    \"file_id\": \"test-file-uuid-123\",\n    \"signed_url\": \"https://your-bucket.s3.amazonaws.com/path/to/file.pdf?X-Amz-Algorithm=...\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pdf-processor",
              "host": ["{{base_url}}"],
              "path": ["pdf-processor"]
            }
          },
          "response": []
        },
        {
          "name": "Ask Question",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains answer\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('answer');",
                  "    pm.expect(jsonData.answer).to.be.a('string');",
                  "    pm.expect(jsonData.answer.length).to.be.greaterThan(0);",
                  "});",
                  "",
                  "pm.test(\"Response contains question\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('question');",
                  "});",
                  "",
                  "pm.test(\"Response contains timestamp\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('timestamp');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"action\": \"ask_question\",\n    \"processing_id\": \"{{processing_id}}\",\n    \"question\": \"What is the main topic of this document?\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pdf-processor",
              "host": ["{{base_url}}"],
              "path": ["pdf-processor"]
            }
          },
          "response": []
        },
        {
          "name": "Ask Question - Document Summary",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"action\": \"ask_question\",\n    \"processing_id\": \"{{processing_id}}\",\n    \"question\": \"Can you provide a summary of the document?\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pdf-processor",
              "host": ["{{base_url}}"],
              "path": ["pdf-processor"]
            }
          },
          "response": []
        },
        {
          "name": "Ask Question - Key Points",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"action\": \"ask_question\",\n    \"processing_id\": \"{{processing_id}}\",\n    \"question\": \"What are the key points mentioned in this document?\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pdf-processor",
              "host": ["{{base_url}}"],
              "path": ["pdf-processor"]
            }
          },
          "response": []
        },
        {
          "name": "Get Conversations",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains conversations array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('conversations');",
                  "    pm.expect(jsonData.conversations).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"Response contains total_conversations\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('total_conversations');",
                  "    pm.expect(jsonData.total_conversations).to.be.a('number');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"action\": \"get_conversations\",\n    \"processing_id\": \"{{processing_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pdf-processor",
              "host": ["{{base_url}}"],
              "path": ["pdf-processor"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Error Cases",
      "item": [
        {
          "name": "Process PDF - Missing file_id",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Response contains error\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"action\": \"process_pdf\",\n    \"signed_url\": \"test-url\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pdf-processor",
              "host": ["{{base_url}}"],
              "path": ["pdf-processor"]
            }
          },
          "response": []
        },
        {
          "name": "Ask Question - Invalid processing_id",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test(\"Response contains error\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"action\": \"ask_question\",\n    \"processing_id\": \"invalid-uuid\",\n    \"question\": \"Test question\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pdf-processor",
              "host": ["{{base_url}}"],
              "path": ["pdf-processor"]
            }
          },
          "response": []
        },
        {
          "name": "Invalid Action",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Response contains error\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "    pm.expect(jsonData.error).to.eql('Invalid action');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"action\": \"invalid_action\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pdf-processor",
              "host": ["{{base_url}}"],
              "path": ["pdf-processor"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "CORS Preflight",
      "request": {
        "method": "OPTIONS",
        "header": [],
        "url": {
          "raw": "{{base_url}}/pdf-processor",
          "host": ["{{base_url}}"],
          "path": ["pdf-processor"]
        }
      },
      "response": []
    }
  ]
} 